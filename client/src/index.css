@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 98%;

  --foreground: 220 13% 18%;

  --border: 220 13% 91%;

  --card: 0 0% 100%;

  --card-foreground: 220 13% 18%;

  --card-border: 220 13% 94%;

  --sidebar: 220 13% 96%;

  --sidebar-foreground: 220 13% 18%;

  --sidebar-border: 220 13% 89%;

  --sidebar-primary: 217 91% 60%;

  --sidebar-primary-foreground: 0 0% 100%;

  --sidebar-accent: 220 9% 88%;

  --sidebar-accent-foreground: 220 13% 18%;

  --sidebar-ring: 217 91% 60%;

  --popover: 0 0% 99%;

  --popover-foreground: 220 13% 18%;

  --popover-border: 220 13% 92%;

  --primary: 217 91% 60%;

  --primary-foreground: 0 0% 100%;

  --secondary: 220 13% 91%;

  --secondary-foreground: 220 13% 18%;

  --muted: 220 9% 93%;

  --muted-foreground: 220 13% 35%;

  --accent: 220 12% 90%;

  --accent-foreground: 220 13% 18%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 100%;

  --input: 220 13% 75%;
  --ring: 217 91% 60%;
  --chart-1: 217 91% 60%;
  --chart-2: 25 95% 53%;
  --chart-3: 142 71% 45%;
  --chart-4: 38 92% 50%;
  --chart-5: 199 89% 48%;

  --font-sans: Inter, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: "SF Mono", Monaco, "Cascadia Code", "Roboto Mono", Consolas, "Courier New", monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(220 13% 18% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(220 13% 18% / 0.08);
  --shadow-sm: 0px 2px 4px 0px hsl(220 13% 18% / 0.06), 0px 1px 2px -1px hsl(220 13% 18% / 0.04);
  --shadow: 0px 4px 6px -1px hsl(220 13% 18% / 0.08), 0px 2px 4px -2px hsl(220 13% 18% / 0.05);
  --shadow-md: 0px 6px 12px -2px hsl(220 13% 18% / 0.10), 0px 3px 7px -3px hsl(220 13% 18% / 0.07);
  --shadow-lg: 0px 10px 20px -4px hsl(220 13% 18% / 0.12), 0px 6px 12px -6px hsl(220 13% 18% / 0.08);
  --shadow-xl: 0px 20px 25px -5px hsl(220 13% 18% / 0.14), 0px 10px 15px -7px hsl(220 13% 18% / 0.10);
  --shadow-2xl: 0px 25px 50px -12px hsl(220 13% 18% / 0.18);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Premium Visual Effects */
  --orange: 25 95% 53%;
  --purple: 250 70% 60%;
  --glass-bg: rgba(255, 255, 255, 0.7);
  --glass-border: rgba(255, 255, 255, 0.18);
  --gradient-mesh: radial-gradient(at 0% 0%, hsl(217 91% 60% / 0.2) 0px, transparent 50%),
                   radial-gradient(at 100% 100%, hsl(25 95% 53% / 0.15) 0px, transparent 50%);
  --shimmer-gradient: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 220 13% 18%;

  --foreground: 0 0% 98%;

  --border: 220 13% 28%;

  --card: 220 13% 21%;

  --card-foreground: 0 0% 98%;

  --card-border: 220 13% 25%;

  --sidebar: 220 13% 23%;

  --sidebar-foreground: 0 0% 98%;

  --sidebar-border: 220 13% 30%;

  --sidebar-primary: 217 91% 60%;

  --sidebar-primary-foreground: 0 0% 100%;

  --sidebar-accent: 220 13% 28%;

  --sidebar-accent-foreground: 0 0% 98%;

  --sidebar-ring: 217 91% 60%;

  --popover: 220 13% 25%;

  --popover-foreground: 0 0% 98%;

  --popover-border: 220 13% 32%;

  --primary: 217 91% 60%;

  --primary-foreground: 0 0% 100%;

  --secondary: 220 13% 30%;

  --secondary-foreground: 0 0% 98%;

  --muted: 220 9% 27%;

  --muted-foreground: 0 0% 75%;

  --accent: 220 12% 29%;

  --accent-foreground: 0 0% 98%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 100%;

  --input: 220 13% 42%;
  --ring: 217 91% 60%;
  --chart-1: 217 91% 70%;
  --chart-2: 25 95% 65%;
  --chart-3: 142 71% 60%;
  --chart-4: 38 92% 65%;
  --chart-5: 199 89% 65%;

  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.20);
  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.25);
  --shadow-sm: 0px 2px 4px 0px hsl(0 0% 0% / 0.22), 0px 1px 2px -1px hsl(0 0% 0% / 0.18);
  --shadow: 0px 4px 6px -1px hsl(0 0% 0% / 0.28), 0px 2px 4px -2px hsl(0 0% 0% / 0.20);
  --shadow-md: 0px 6px 12px -2px hsl(0 0% 0% / 0.32), 0px 3px 7px -3px hsl(0 0% 0% / 0.24);
  --shadow-lg: 0px 10px 20px -4px hsl(0 0% 0% / 0.38), 0px 6px 12px -6px hsl(0 0% 0% / 0.28);
  --shadow-xl: 0px 20px 25px -5px hsl(0 0% 0% / 0.42), 0px 10px 15px -7px hsl(0 0% 0% / 0.32);
  --shadow-2xl: 0px 25px 50px -12px hsl(0 0% 0% / 0.50);

  /* Premium Visual Effects - Dark Mode */
  --glass-bg: rgba(255, 255, 255, 0.05);
  --glass-border: rgba(255, 255, 255, 0.1);
  --gradient-mesh: radial-gradient(at 0% 0%, hsl(217 91% 70% / 0.15) 0px, transparent 50%),
                   radial-gradient(at 100% 100%, hsl(25 95% 65% / 0.1) 0px, transparent 50%);
  --shimmer-gradient: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Premium Visual Utilities */
  .glass {
    background: var(--glass-bg);
    border: 1px solid var(--glass-border);
  }

  /* Glass with blur - use sparingly for performance */
  @media (min-width: 768px) {
    .glass-strong {
      background: var(--glass-bg);
      backdrop-filter: blur(20px);
      -webkit-backdrop-filter: blur(20px);
      border: 1px solid var(--glass-border);
    }
  }

  /* Mobile fallback - no blur for performance */
  @media (max-width: 767px) {
    .glass-strong {
      background: hsl(var(--card));
      border: 1px solid hsl(var(--border));
    }
  }

  .gradient-mesh {
    background-image: var(--gradient-mesh);
  }

  .shimmer {
    position: relative;
    overflow: hidden;
  }

  .shimmer::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: var(--shimmer-gradient);
    animation: shimmer 2s infinite;
  }

  @keyframes shimmer {
    0% { left: -100%; }
    100% { left: 100%; }
  }

  .gradient-border {
    position: relative;
  }

  .gradient-border::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 1px;
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--orange)));
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .gradient-border:hover::before {
    opacity: 1;
  }

  .text-gradient {
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--orange)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .text-gradient-purple {
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--purple)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .card-hover-lift {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .card-hover-lift:hover {
    transform: translateY(-4px);
    box-shadow: 
      0 10px 20px -4px hsl(var(--primary) / 0.15),
      0 6px 12px -6px hsl(var(--primary) / 0.1);
  }

  .gradient-bg-primary {
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--purple)));
  }

  .gradient-bg-orange {
    background: linear-gradient(135deg, hsl(var(--orange)), hsl(25 95% 63%));
  }

  .gradient-bg-success {
    background: linear-gradient(135deg, hsl(var(--chart-3)), hsl(142 71% 55%));
  }

  .icon-gradient-bg {
    background: linear-gradient(135deg, hsl(var(--primary) / 0.1), hsl(var(--purple) / 0.05));
  }

  /* Stagger animation for children */
  .stagger-fade-in > * {
    opacity: 0;
    animation: fadeInUp 0.5s ease forwards;
  }

  .stagger-fade-in > *:nth-child(1) { animation-delay: 0.05s; }
  .stagger-fade-in > *:nth-child(2) { animation-delay: 0.1s; }
  .stagger-fade-in > *:nth-child(3) { animation-delay: 0.15s; }
  .stagger-fade-in > *:nth-child(4) { animation-delay: 0.2s; }
  .stagger-fade-in > *:nth-child(5) { animation-delay: 0.25s; }
  .stagger-fade-in > *:nth-child(6) { animation-delay: 0.3s; }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Pulse animation for important items */
  .pulse-glow {
    animation: pulseGlow 2s ease-in-out infinite;
  }

  @keyframes pulseGlow {
    0%, 100% {
      box-shadow: 0 0 0 0 hsl(var(--primary) / 0.4);
    }
    50% {
      box-shadow: 0 0 20px 4px hsl(var(--primary) / 0.2);
    }
  }
}